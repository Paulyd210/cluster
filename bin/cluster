#!/usr/bin/env php
<?php

require dirname(__DIR__) . "/vendor/autoload.php";

use Amp\ByteStream\ResourceOutputStream;
use Amp\Cluster\Cluster;
use Amp\Loop;
use Amp\Log\StreamHandler;
use Amp\Log\ConsoleFormatter;
use Monolog\Logger;
use function Amp\Cluster\countCpuCores;

Loop::run(function () use ($argv, $argc) {
    if ($argc !== 2) {
        print "Usage: bin/cluster script.php\r\n";
        exit(1);
    }

    $handler = new StreamHandler(new ResourceOutputStream(STDOUT));
    $handler->setFormatter(new ConsoleFormatter);
    $logger = new Logger('Console');
    $logger->pushHandler($handler);

    $cluster = new Cluster($argv[1], $logger);

    yield $cluster->start(countCpuCores());

    $iterator = $cluster->iterate();

    // Not sure what to do with received data in the generic runner? Perhaps ignore?
    while (yield $iterator->advance()) {
        $logger->info("Received data from worker: " . $iterator->getCurrent());
    }
});
